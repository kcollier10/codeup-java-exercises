Java Collections

### What is a Data Structure?

- A way of storing and organizing data for effective access and modification.

### What are Collections?

- A Collection is a data structure that can be used to store and group objects.
- Java Collections are not part of the native language, but are included in the Java standard library.
- Collection is actually an interface that is extended by a few sub-interfaces like List, Set and Queue.
- Today we will be covering a specific subtype of List: ArrayList

[Java Docs - Collection interface](https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html)

### What are Maps?

- Maps are another data structure provided in the Java standard library.
- It is not a subtype of Collection, therefore it behaves differently.
- Maps are intended to store key-value pairs, similar to Objects in JavaScript.
- Today we will be covering a specific subtype of Map: HashMap

** Both of these libraries can be imported into a Class for use **

### ArrayList

- The ArrayList type acts like a wrapper around a native Java array.
- The methods available on an ArrayList allow us to easily manipulate the ArrayList when adding or accessing elements.
- Unlike Arrays in JavaScript however, ArrayLists can only hold Objects and they must be of the same type.
- Luckily, Java already provides us with "wrapper" classes around primitive types which will allow us to store data like Integers and Doubles in our Collections.
- **USE FOR NON-FINAL/CONST SITUATIONS**
- **employee lists, since they can change/vary**
### HashMap

- Similar to Objects in JavaScript, HashMaps store data in key-value pairs
- Keys should all be the same type
- Values should all be the same type
- Keys and Values do NOT have to be the same type. (ie. Keys are Strings and Values are Integers)

[Assigning to ArrayList vs List](https://stackoverflow.com/questions/14974749/assigning-arraylist-to-list)