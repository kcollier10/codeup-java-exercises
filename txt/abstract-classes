Abstract classes have no body:

abstract class Employee {
    public abstract String work();
}

class Accountant extends Employee {
    public String work() {
        return 'crunching numbers';
    }
}

Can serve as a superclass, but cannot be directly instantiated
Abstract classes can define abstract methods, only providing info on name, return type, and parameters

McDonalds is overarching item, locations would be differnt classes


Abstract classes - good for declaring non-public memebers
                 -easier to add methods in the future without breaking functionality
                 -can partially implement functionality by writing out methods
                      -in an interface, you can't implement *any* functionality
                 -abstract class: instance and static variables, constants, and methods